language: generic

sudo: false

git:
  submodules: true
  depth: 10

addons:
  postgresql: "9.4"

matrix:
  include:
    - os: linux
      sudo: false
      compiler: ": clang-release"
      env: JOBS=8 CXX="clang++-3.5" CC="ccache clang++-3.5 -Qunused-arguments"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.5' ]
          packages: [ 'clang-3.5' ]
    - os: osx
      osx_image: xcode7.3 # upgrades clang from 6 -> 7
      compiler: clang
      env: JOBS=4

cache:
  directories:
  - $HOME/.ccache

env:
  global:
    - secure: "CqhZDPctJcpXGPpmIPK5usD/O+2HYawW3434oDufVS9uG/+C7aHzKzi8cuZ7n/REHqJMzy7gJfp6DiyF2QowpnN1L2W0FSJ9VOgj4JQF2Wsupo6gJkq6/CW2Fa35PhQHsv29bfyqtIq+R5SBVAieBe/Lh2P144RwRliGRopGQ68="
    - secure: "idk4fdU49i546Zs6Fxha14H05eRJ1G/D6NPRaie8M8o+xySnEqf+TyA9/HU8QH7cFvroSLuHJ1U7TmwnR+sXy4XBlIfHLi4u2MN+l/q014GG7T2E2xYcTauqjB4ldToRsDQwe5Dq0gZCMsHLPspWPjL9twfp+Ds7qgcFhTsct0s="
    - BOOST_PYTHON_LIB="boost_python"
    - BOOST_SYSTEM_LIB="boost_system"
    - BOOST_THREAD_LIB="boost_thread"
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1

before_install:
 - export PYTHONUSERBASE=$(pwd)/mason_packages/.link
 - export PYTHONPATH=$(pwd)/mason_packages/.link/lib/python2.7/site-packages
 - export PATH=$(pwd)/mason_packages/.link/bin:${PYTHONUSERBASE}/bin:${PATH}
 - export MASON_BUILD=true
 - export COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
 - if [[ $(uname -s) == 'Linux' ]]; then
     export LDSHARED=$(python -c "import os;from distutils import sysconfig;print sysconfig.get_config_var('LDSHARED').replace('cc ','clang++-3.5 ')");
   else
     sudo easy_install pip;
     brew rm postgis --force;
     brew install postgis --force;
     pg_ctl -w start -l postgres.log --pgdata /usr/local/var/postgres;
     createuser -s postgres;
     export LDSHARED=$(python -c "import os;from distutils import sysconfig;print sysconfig.get_config_var('LDSHARED').replace('cc ','clang++ ')");
   fi;
 - psql -c 'create database template_postgis;' -U postgres
 - psql -c 'create extension postgis;' -d template_postgis -U postgres
 - pip install --upgrade --user nose
 - pip install --upgrade --user wheel
 - pip install --upgrade --user twine
 - pip install --upgrade --user setuptools
 - python --version

install:
 - mkdir -p ${PYTHONPATH}
 - python setup.py install --prefix ${PYTHONUSERBASE}

before_script:
 - python test/run_tests.py -q

script:
 - python test/visual.py -q
 - if [[ ${COMMIT_MESSAGE} =~ "[publish]" ]]; then
    python setup.py bdist_wheel;
    if [[ $(uname -s) == 'Linux' ]]; then
        export PRE_DISTS='dist/*.whl';
        rename 's/linux_x86_64/any/;' $PRE_DISTS;
    fi;
    export DISTS='dist/*';
    $(pwd)/mason_packages/.link/bin/twine upload -u $PYPI_USER -p $PYPI_PASSWORD $DISTS ;
   fi;
